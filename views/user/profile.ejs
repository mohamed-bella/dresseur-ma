<%- include('include/head') %>
<%- include('include/navbar') %>

<!-- Profile Header Banner -->
<div class="relative lg:ml-64">
    <!-- Banner Background -->
    <div class="h-48 sm:h-64 bg-gradient-to-r from-slate-800 to-slate-900"></div>

    <!-- Main Content Container -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 -mt-16 relative">
        <div class="flex flex-col lg:flex-row gap-6">
           <!-- Left Sidebar: Profile Card -->
<div class="lg:w-80">
     <div class="sticky top-24">
         <!-- Profile Card -->
         <div class="bg-white rounded-2xl overflow-hidden">
             <!-- Cover Image Background -->
             <div class="h-32 bg-gradient-to-r from-gray-900 to-black relative">
                 <!-- Specialty Badge -->
                 <div class="absolute top-4 left-4">
                     <span class="inline-flex items-center px-3 py-1 rounded-full text-sm
                                 bg-black/50 backdrop-blur-sm text-white font-medium">
                         <i class="fas fa-shield-dog mr-2"></i>
                         Dresseur Pro
                     </span>
                 </div>
             </div>
 
             <!-- Profile Content -->
             <div class="relative px-6 pb-6">
                 <!-- Profile Image -->
                 <div class="relative -mt-16 mb-4">
                     <div class="w-32 h-32 mx-auto rounded-2xl ring-4 ring-white shadow-lg overflow-hidden">
                         <img src="<%= profile.profileImage %>" 
                              alt="<%= profile.displayName %>" 
                              class="w-full h-full object-cover">
                     </div>
                     
                     <!-- Verification Badge -->
                     <% if (profile.isVerified) { %>
                         <div class="absolute -bottom-2 right-1/3 transform translate-x-2">
                             <div class="bg-red-600 rounded-full p-1.5 ring-4 ring-white">
                                 <i class="fas fa-check text-sm text-white"></i>
                             </div>
                         </div>
                     <% } %>
                 </div>
 
                 <!-- Profile Info -->
                 <div class="text-center">
                     <h1 class="text-2xl font-bold text-gray-900 mb-1">
                         <%= profile.displayName %>
                     </h1>
                     
                     <!-- Location and Membership -->
                     <div class="space-y-2 mb-6">
                         <% if (profile.location?.city) { %>
                             <div class="flex items-center justify-center gap-2 text-gray-600">
                                 <i class="fas fa-map-marker-alt text-red-600"></i>
                                 <span class="text-sm font-medium"><%= profile.location.city %></span>
                             </div>
                         <% } %>
                         <div class="flex items-center justify-center gap-2 text-gray-600">
                             <i class="fas fa-calendar text-red-600"></i>
                             <span class="text-sm font-medium">
                                 Membre depuis <%= new Date(profile.createdAt).toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' }) %>
                             </span>
                         </div>
                     </div>
 
                     <!-- Stats Grid -->
                     <div class="grid grid-cols-2 gap-4 mb-6">
                         <!-- Score -->
                         <div class="p-3 rounded-xl bg-black/5">
                             <div class="text-2xl font-bold text-gray-900">
                                 <%= profile.ndressilikScore || 0 %>
                             </div>
                             <div class="text-sm font-medium text-gray-600">Score K9</div>
                         </div>
                         <!-- Reviews -->
                         <div class="p-3 rounded-xl bg-black/5">
                             <div class="text-2xl font-bold text-gray-900">
                                 <%= profile.metrics?.totalReviews || 0 %>
                             </div>
                             <div class="text-sm font-medium text-gray-600">Avis</div>
                         </div>
                     </div>
 
                     <!-- Contact Button -->
                     <% if (profile.phoneNumber) { %>
                         <div class="space-y-3">
                             <button onclick="openCallModal()" 
                                     class="w-full flex items-center justify-center gap-2 px-6 py-3.5
                                            bg-black hover:bg-red-600 text-white rounded-xl
                                            transition-all duration-300 font-medium">
                                 <i class="fas fa-phone-alt"></i>
                                 <span>Contacter</span>
                             </button>
                             
                             <!-- WhatsApp Link -->
                             <a href="https://wa.me/<%= profile.phoneNumber.replace(/\D/g, '') %>" 
                                target="_blank"
                                class="w-full flex items-center justify-center gap-2 px-6 py-3.5
                                       border-2 border-black text-black rounded-xl
                                       hover:bg-black hover:text-white
                                       transition-all duration-300 font-medium">
                                 <i class="fab fa-whatsapp"></i>
                                 <span>WhatsApp</span>
                             </a>
                         </div>
                     <% } %>
                 </div>
             </div>
 
             <!-- Quick Actions -->
             <div class="px-6 py-4 bg-black/5 mt-6">
                 <div class="flex items-center justify-between text-sm">
                     <button class="flex items-center gap-2 text-gray-600 hover:text-red-600 transition-colors">
                         <i class="fas fa-share-alt"></i>
                         <span>Partager</span>
                     </button>
                     <button class="flex items-center gap-2 text-gray-600 hover:text-red-600 transition-colors">
                         <i class="far fa-flag"></i>
                         <span>Signaler</span>
                     </button>
                 </div>
             </div>
         </div>
     </div>
 </div>

            <!-- Main Content Area -->
            <div class="flex-1">
                <!-- Content Tabs -->
                <div class="bg-white rounded-2xl shadow-sm ring-1 ring-gray-100">
                    <!-- Tab Navigation -->
                <!-- Tab Navigation -->
<div class="relative">
     <!-- Scrollable Tab Container -->
     <div class="overflow-x-auto scrollbar-hide">
         <nav class="flex min-w-full border-b border-gray-100">
             <% const tabs = [
                 { 
                     id: 'about', 
                     label: 'À propos', 
                     icon: 'fa-user',
                     badge: null
                 },
                 { 
                     id: 'experience', 
                     label: 'Expérience', 
                     icon: 'fa-briefcase',
                     badge: null
                 },
                 { 
                     id: 'gallery', 
                     label: 'Galerie', 
                     icon: 'fa-images',
                     badge: profile.gallery?.length || 0
                 },
                 { 
                     id: 'reviews', 
                     label: 'Avis', 
                     icon: 'fa-star',
                     badge: profile.metrics?.totalReviews || 0
                 },
                 { 
                     id: 'qualifications', 
                     label: 'Qualifications', 
                     icon: 'fa-certificate',
                     badge: profile.qualifications?.length || 0
                 }
             ] %>
 
             <div class="flex w-full md:w-auto md:mx-auto">
                 <% tabs.forEach(tab => { %>
                     <button data-tab="<%= tab.id %>"
                             class="tab-button group relative min-w-[120px] md:min-w-[150px] flex-1 md:flex-none
                                    flex flex-col items-center justify-center gap-1 px-4 py-3 md:py-4
                                    text-sm font-medium transition-all duration-200
                                    <%= tab.id === 'about' ? 'active' : '' %>">
                         <!-- Icon and Label Container -->
                         <div class="flex flex-col items-center">
                             <i class="fas <%= tab.icon %> text-lg mb-1 group-hover:text-red-600
                                       <%= tab.id === 'about' ? 'text-red-600' : 'text-gray-400' %>"></i>
                             <span class="whitespace-nowrap <%= tab.id === 'about' ? 'text-red-600' : 'text-gray-600' %> 
                                        group-hover:text-red-600">
                                 <%= tab.label %>
                             </span>
                         </div>
 
                         <!-- Count Badge -->
                         <% if (tab.badge !== null && tab.badge !== undefined) { %>
                             <span class="absolute top-1 right-2 px-1.5 py-0.5 min-w-[20px]
                                        rounded-full <%= tab.badge > 0 ? 'bg-red-100 text-red-600' : 'bg-gray-100 text-gray-600' %> text-xs">
                                 <%= tab.badge %>
                             </span>
                         <% } %>
 
                         <!-- Active Indicator -->
                         <div class="absolute bottom-0 left-0 right-0 h-0.5 bg-red-600 transform scale-x-0 transition-transform duration-200
                                   <%= tab.id === 'about' ? 'scale-x-100' : '' %>"></div>
                     </button>
                 <% }) %>
             </div>
         </nav>
     </div>
 
     <!-- Gradient Shadows for Scroll Indication -->
     <div class="absolute left-0 top-0 bottom-0 w-8 bg-gradient-to-r from-white to-transparent pointer-events-none md:hidden"></div>
     <div class="absolute right-0 top-0 bottom-0 w-8 bg-gradient-to-l from-white to-transparent pointer-events-none md:hidden"></div>
 </div>
 
 <!-- Tab Content -->
 <div class="p-6">
     <!-- About Tab -->
     <div id="about-tab" class="tab-content space-y-6">
         <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
             <!-- Basic Info -->
             <div class="bg-gray-50 rounded-xl p-6 space-y-4">
                 <h3 class="text-lg font-semibold text-gray-900">Informations</h3>
                 <div class="space-y-3">
                     <% if (profile.location?.city) { %>
                         <div class="flex items-center gap-3">
                             <i class="fas fa-map-marker-alt text-red-600 w-5"></i>
                             <span class="text-gray-600"><%= profile.location.city %></span>
                         </div>
                     <% } %>
                     <div class="flex items-center gap-3">
                         <i class="fas fa-user-check text-red-600 w-5"></i>
                         <span class="text-gray-600">Membre depuis <%= new Date(profile.createdAt).toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' }) %></span>
                     </div>
                     <% if (profile.languages?.length > 0) { %>
                         <div class="flex items-center gap-3">
                             <i class="fas fa-globe text-red-600 w-5"></i>
                             <span class="text-gray-600"><%= profile.languages.join(', ') %></span>
                         </div>
                     <% } %>
                 </div>
             </div>
 
             <!-- Trust Factors -->
             <div class="bg-gray-50 rounded-xl p-6 space-y-4">
                 <h3 class="text-lg font-semibold text-gray-900">Performance</h3>
                 <div class="space-y-3">
                     <div class="flex items-center gap-3">
                         <i class="fas fa-reply text-red-600 w-5"></i>
                         <div class="flex-1">
                             <div class="flex justify-between mb-1">
                                 <span class="text-sm text-gray-600">Taux de réponse</span>
                                 <span class="text-sm font-medium text-gray-900"><%= profile.trustFactors.responseRate %>%</span>
                             </div>
                             <div class="h-2 bg-gray-200 rounded-full">
                                 <div class="h-2 bg-red-600 rounded-full" style="width: <%= profile.trustFactors.responseRate %>%"></div>
                             </div>
                         </div>
                     </div>
                     <div class="flex items-center gap-3">
                         <i class="fas fa-check-circle text-red-600 w-5"></i>
                         <div class="flex-1">
                             <div class="flex justify-between mb-1">
                                 <span class="text-sm text-gray-600">Taux de réalisation</span>
                                 <span class="text-sm font-medium text-gray-900"><%= profile.trustFactors.completionRate %>%</span>
                             </div>
                             <div class="h-2 bg-gray-200 rounded-full">
                                 <div class="h-2 bg-red-600 rounded-full" style="width: <%= profile.trustFactors.completionRate %>%"></div>
                             </div>
                         </div>
                     </div>
                     <div class="flex items-center gap-3">
                         <i class="fas fa-clock text-red-600 w-5"></i>
                         <div class="flex-1">
                             <div class="flex justify-between mb-1">
                                 <span class="text-sm text-gray-600">Ponctualité</span>
                                 <span class="text-sm font-medium text-gray-900"><%= profile.trustFactors.onTimeRate %>%</span>
                             </div>
                             <div class="h-2 bg-gray-200 rounded-full">
                                 <div class="h-2 bg-red-600 rounded-full" style="width: <%= profile.trustFactors.onTimeRate %>%"></div>
                             </div>
                         </div>
                     </div>
                 </div>
             </div>
         </div>
     </div>
 
     <!-- Experience Tab -->
<div id="experience-tab" class="tab-content space-y-6 hidden">
    <div class="bg-white rounded-xl shadow-sm p-6">
        <div class="space-y-4">
            <div class="flex items-start gap-4">
                <div class="flex-shrink-0 w-12 h-12 bg-red-100 rounded-full flex items-center justify-center">
                    <i class="fas fa-briefcase text-red-600 text-xl"></i>
                </div>
                <div class="flex-1">
                    <h3 class="text-lg font-semibold text-gray-900 mb-2">Expérience Professionnelle</h3>
                    <p class="text-gray-600">
                        <%= profile.experience?.description || "Aucune expérience n'a été ajoutée." %>
                    </p>
                </div>
            </div>

            <% if (profile.specializations?.length > 0) { %>
                <div class="mt-6">
                    <h4 class="text-md font-medium text-gray-900 mb-3">Spécialisations</h4>
                    <div class="flex flex-wrap gap-2">
                        <% profile.specializations.forEach(spec => { %>
                            <span class="px-3 py-1.5 bg-red-50 text-red-600 rounded-full text-sm">
                                <%= spec %>
                            </span>
                        <% }) %>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Gallery Tab -->
<div id="gallery-tab" class="tab-content space-y-6 hidden">
    <% if (profile.gallery?.length > 0) { %>
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            <% profile.gallery.forEach((item, index) => { %>
                <div class="group relative aspect-square rounded-xl overflow-hidden bg-gray-100 cursor-pointer"
                     onclick="openGalleryModal(<%= index %>)">
                    <img src="<%= item.url %>" 
                         alt="<%= item.caption || 'Gallery image' %>" 
                         class="w-full h-full object-cover">
                    <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                        <div class="absolute bottom-0 left-0 right-0 p-4">
                            <% if (item.caption) { %>
                                <p class="text-white text-sm"><%= item.caption %></p>
                            <% } %>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
    <% } else { %>
        <div class="text-center py-12">
            <div class="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
                <i class="fas fa-images text-gray-400 text-xl"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Aucune photo</h3>
            <p class="text-gray-500">Aucune photo n'a été ajoutée à la galerie</p>
        </div>
    <% } %>
</div>

<!-- Reviews Tab -->
<div id="reviews-tab" class="tab-content space-y-6 hidden">
    <div class="bg-white rounded-xl shadow-sm overflow-hidden">
        <!-- Reviews Summary -->
        <div class="border-b border-gray-100 p-6">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
                <div class="flex items-center gap-4">
                    <div class="w-16 h-16 bg-red-50 rounded-full flex items-center justify-center">
                        <span class="text-2xl font-bold text-red-600">
                            <%= profile.metrics?.averageRating?.toFixed(1) || '0.0' %>
                        </span>
                    </div>
                    <div>
                        <div class="flex gap-1 text-amber-400 mb-1">
                            <% for(let i = 0; i < 5; i++) { %>
                                <i class="fas fa-star <%= i < Math.round(profile.metrics?.averageRating || 0) ? '' : 'text-gray-200' %>"></i>
                            <% } %>
                        </div>
                        <p class="text-gray-600">
                            Basé sur <%= profile.metrics?.totalReviews || 0 %> avis
                        </p>
                    </div>
                </div>
                <button 
    onclick="checkAndShowReviewModal('<%=profile._id%>')"
    class="group flex items-center justify-center gap-2 px-6 py-3 bg-black text-white rounded-lg hover:bg-gray-900 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-black focus:ring-offset-2">
    <i class="fas fa-star text-yellow-400 group-hover:rotate-12 transition-transform duration-200"></i>
    <span class="font-medium">Écrire un avis</span>
</button>
                
               
            </div>
        </div>

        <!-- Reviews List would be populated dynamically -->
        <div class="divide-y divide-gray-100">
            <% if (reviews?.length > 0) { %>
                <% reviews.forEach(review => { %>
                    <div class="p-6">
                        <div class="flex items-start gap-4">
                            <img src="<%= review.author?.profileImage || 'https://github.com/ndappdev/dresseur-ma/blob/main/review_author_logo.png?raw=true' %>" 
                                 alt="dresseur.ma user review "
                                 class="w-10 h-10 rounded-full">
                            <div class="flex-1">
                                <div class="flex items-start justify-between mb-2">
                                    <div>
                                        <h4 class="font-medium text-gray-900">
                                            Utilisateur
                                        </h4>
                                        <time class="text-sm text-gray-500">
                                            <%= new Date(review.createdAt).toLocaleDateString('fr-FR', { 
                                                day: 'numeric', 
                                                month: 'long', 
                                                year: 'numeric' 
                                            }) %>
                                        </time>
                                    </div>
                                    <div class="flex gap-1 text-amber-400">
                                        <% for(let i = 0; i < 5; i++) { %>
                                            <i class="fas fa-star <%= i < review.rating ? '' : 'text-gray-200' %>"></i>
                                        <% } %>
                                    </div>
                                </div>
                                <p class="text-gray-600"><%= review.comment %></p>
                            </div>
                        </div>
                    </div>
                <% }) %>
            <% } else { %>
                <div class="text-center py-12">
                    <div class="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
                        <i class="fas fa-star text-gray-400 text-xl"></i>
                    </div>
                    <h3 class="text-lg font-medium text-gray-900 mb-2">Aucun avis</h3>
                    <p class="text-gray-500">Soyez le premier à laisser un avis</p>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Qualifications Tab -->
<div id="qualifications-tab" class="tab-content space-y-6 hidden">
    <div class="bg-white rounded-xl shadow-sm p-6">
        <!-- Badges Section -->
        <% if (profile.badges?.length > 0) { %>
            <div class="mb-8">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Badges</h3>
                <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                    <% profile.badges.forEach(badge => { %>
                        <div class="bg-gray-50 rounded-xl p-4 text-center">
                            <div class="w-12 h-12 mx-auto mb-3 bg-red-100 rounded-full flex items-center justify-center">
                                <i class="<%= badge.icon %> text-red-600 text-xl"></i>
                            </div>
                            <h4 class="font-medium text-gray-900 mb-1"><%= badge.type %></h4>
                            <p class="text-sm text-gray-500"><%= badge.type %></p>
                        </div>
                    <% }) %>
                </div>
            </div>
        <% } %>

        <!-- Qualifications Section -->
        <% if (profile.qualifications?.length > 0) { %>
            <div>
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Qualifications</h3>
                <div class="space-y-4">
                    <% profile.qualifications.forEach(qual => { %>
                        <div class="bg-gray-50 rounded-xl p-4">
                            <div class="flex items-start gap-4">
                                <div class="w-10 h-10 bg-red-100 rounded-full flex items-center justify-center">
                                    <i class="fas fa-certificate text-red-600"></i>
                                </div>
                                <div>
                                    <h4 class="font-medium text-gray-900 mb-1"><%= qual.title %></h4>
                                    <p class="text-sm text-gray-600">institution: <%= qual.institution %></p>
                                    <% if (qual.year) { %>
                                        <p class="text-sm text-gray-500 mt-2">
                                            Obtenu en <%= new Date(qual.year).toLocaleDateString('fr-FR', { 
                                                month: 'long', 
                                                year: 'numeric' 
                                            }) %>
                                        </p>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </div>
        <% } %>

        <% if (!profile.badges?.length && !profile.qualifications?.length) { %>
            <div class="text-center py-12">
                <div class="w-16 h-16 mx-auto mb-4 bg-gray-100 rounded-full flex items-center justify-center">
                    <i class="fas fa-certificate text-gray-400 text-xl"></i>
                </div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">Aucune qualification</h3>
                <p class="text-gray-500">Aucune qualification n'a été ajoutée</p>
            </div>
        <% } %>
    </div>
</div>

<!-- Gallery Modal Template -->
<div id="galleryModal" class="fixed inset-0 z-50 hidden">
    <div class="absolute inset-0 bg-black/90 backdrop-blur-sm"></div>
    
    <div class="fixed inset-0 flex items-center justify-center p-4">
        <div class="relative w-full max-w-4xl">
            <!-- Close Button -->
            <button onclick="closeGalleryModal()" 
                    class="absolute -top-4 -right-4 z-10 w-10 h-10 bg-white rounded-full shadow-lg 
                           flex items-center justify-center hover:bg-gray-50">
                <i class="fas fa-times text-gray-500"></i>
            </button>

            <!-- Image Container -->
            <div class="relative aspect-video bg-black rounded-xl overflow-hidden">
                <img id="modalImage" src="" alt="Gallery image" class="w-full h-full object-contain">
                
                <!-- Navigation Buttons -->
                <button onclick="prevImage()" 
                        class="absolute left-4 top-1/2 -translate-y-1/2 w-10 h-10 bg-white/80 rounded-full
                               flex items-center justify-center hover:bg-white transition-colors">
                    <i class="fas fa-chevron-left text-gray-800"></i>
                </button>
                
                <button onclick="nextImage()" 
                        class="absolute right-4 top-1/2 -translate-y-1/2 w-10 h-10 bg-white/80 rounded-full
                               flex items-center justify-center hover:bg-white transition-colors">
                    <i class="fas fa-chevron-right text-gray-800"></i>
                </button>
            </div>

            <!-- Caption -->
            <div id="modalCaption" class="mt-4 text-center text-white"></div>
        </div>
    </div>
</div>

<!-- Add this to your existing JavaScript -->
<script>
    // Gallery Modal Functions
    let currentImageIndex = 0;
    const gallery = <%- JSON.stringify(profile.gallery || []) %>;

    function openGalleryModal(index) {
        currentImageIndex = index;
        updateModalImage();
        document.getElementById('galleryModal').classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }

    function closeGalleryModal() {
        document.getElementById('galleryModal').classList.add('hidden');
        document.body.style.overflow = '';
    }

    function updateModalImage() {
        const modalImage = document.getElementById('modalImage');
        const modalCaption = document.getElementById('modalCaption');
        const currentImage = gallery[currentImageIndex];

        modalImage.src = currentImage.url;
        modalCaption.textContent = currentImage.caption || '';
    }

    function prevImage() {
        currentImageIndex = (currentImageIndex - 1 + gallery.length) % gallery.length;
        updateModalImage();
    }

    function nextImage() {
        currentImageIndex = (currentImageIndex + 1) % gallery.length;
        updateModalImage();
    }

    // Close modal on escape key
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeGalleryModal();
        } else if (e.key === 'ArrowLeft') {
            prevImage();
        } else if (e.key === 'ArrowRight') {
            nextImage();
        }
    });

    // Close modal on backdrop click
    document.getElementById('galleryModal').addEventListener('click', (e) => {
        if (e.target.id === 'galleryModal') {
            closeGalleryModal();
        }
    });

    // Ensure navigation buttons don't trigger backdrop click
    document.querySelectorAll('#galleryModal button').forEach(button => {
        button.addEventListener('click', (e) => {
            e.stopPropagation();
        });
    });
</script>

<!-- Additional Styles for Tab Contents -->
<style>
    /* Smooth transitions for tab content */
    .tab-content {
        transition: opacity 0.2s ease-in-out;
    }
    
    .tab-content.hidden {
        display: none;
        opacity: 0;
    }
    
    .tab-content:not(.hidden) {
        opacity: 1;
    }

    /* Gallery hover effects */
    .gallery-item:hover .gallery-overlay {
        opacity: 1;
    }

    /* Progress bar animations */
    .progress-bar {
        transition: width 1s ease-in-out;
    }

    /* Rating stars */
    .rating-stars {
        display: inline-flex;
        gap: 2px;
    }

    /* Badge animations */
    .badge-icon {
        transition: transform 0.2s ease-in-out;
    }
    
    .badge:hover .badge-icon {
        transform: scale(1.1);
    }

    /* Modal transitions */
    #galleryModal {
        transition: opacity 0.3s ease-in-out;
    }

    #galleryModal:not(.hidden) {
        opacity: 1;
    }

    #galleryModal.hidden {
        opacity: 0;
    }

    /* Image transitions in modal */
    #modalImage {
        transition: transform 0.3s ease-in-out;
    }

    /* Navigation button hover effects */
    .nav-button {
        transition: background-color 0.2s ease-in-out;
    }

    .nav-button:hover {
        background-color: rgba(255, 255, 255, 0.9);
    }

    /* Custom scrollbar for reviews */
    .reviews-container::-webkit-scrollbar {
        width: 6px;
    }

    .reviews-container::-webkit-scrollbar-track {
        background: #f3f4f6;
        border-radius: 3px;
    }

    .reviews-container::-webkit-scrollbar-thumb {
        background: #d1d5db;
        border-radius: 3px;
    }

    .reviews-container::-webkit-scrollbar-thumb:hover {
        background: #9ca3af;
    }

    /* Mobile optimizations */
    @media (max-width: 768px) {
        .gallery-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .qualifications-grid {
            grid-template-columns: 1fr;
        }

        .modal-content {
            margin: 1rem;
            max-height: calc(100vh - 2rem);
        }
    }

    /* Loading states */
    .loading-skeleton {
        animation: skeleton-loading 1s linear infinite alternate;
    }

    @keyframes skeleton-loading {
        0% {
            background-color: #f3f4f6;
        }
        100% {
            background-color: #e5e7eb;
        }
    }

    /* Print styles */
    @media print {
        .tab-content {
            display: block !important;
            opacity: 1 !important;
        }

        .no-print {
            display: none !important;
        }

        .page-break {
            page-break-before: always;
        }
    }
</style>

<!-- Component initialization -->
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize progress bars with animation
        const progressBars = document.querySelectorAll('.progress-bar');
        progressBars.forEach(bar => {
            const target = parseFloat(bar.getAttribute('data-target'));
            setTimeout(() => {
                bar.style.width = `${target}%`;
            }, 200);
        });

        // Initialize image lazy loading
        const images = document.querySelectorAll('img[loading="lazy"]');
        if ('IntersectionObserver' in window) {
            const imageObserver = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        const img = entry.target;
                        img.src = img.dataset.src;
                        img.classList.remove('loading-skeleton');
                        observer.unobserve(img);
                    }
                });
            });

            images.forEach(img => imageObserver.observe(img));
        }

        // Handle tab persistence
        const activeTab = localStorage.getItem('activeProfileTab');
        if (activeTab) {
            const tabButton = document.querySelector(`[data-tab="${activeTab}"]`);
            if (tabButton) {
                tabButton.click();
            }
        }

        // Save active tab to localStorage
        document.querySelectorAll('.tab-button').forEach(button => {
            button.addEventListener('click', () => {
                localStorage.setItem('activeProfileTab', button.getAttribute('data-tab'));
            });
        });
    });

    // Handle touch events for gallery
    let touchStartX = 0;
    let touchEndX = 0;

    document.getElementById('galleryModal').addEventListener('touchstart', e => {
        touchStartX = e.changedTouches[0].screenX;
    });

    document.getElementById('galleryModal').addEventListener('touchend', e => {
        touchEndX = e.changedTouches[0].screenX;
        handleSwipe();
    });

    function handleSwipe() {
        const swipeThreshold = 50;
        const diff = touchEndX - touchStartX;

        if (Math.abs(diff) > swipeThreshold) {
            if (diff > 0) {
                prevImage();
            } else {
                nextImage();
            }
        }
    }

    // Handle window resize for responsive adjustments
    window.addEventListener('resize', () => {
        if (window.innerWidth >= 768) {
            document.querySelectorAll('.tab-button').forEach(button => {
                button.style.transform = 'none';
            });
        }
    });
</script>
    </div>
 
 <!-- JavaScript for tab functionality -->
 <script>
     document.addEventListener('DOMContentLoaded', function() {
         const tabButtons = document.querySelectorAll('.tab-button');
         const tabContents = document.querySelectorAll('.tab-content');
         
         tabButtons.forEach(button => {
             button.addEventListener('click', () => {
                 const tabId = button.getAttribute('data-tab');
                 
                 // Update active states for all tabs
                 tabButtons.forEach(btn => {
                     const icon = btn.querySelector('i');
                     const text = btn.querySelector('span');
                     const indicator = btn.querySelector('div.absolute.bottom-0');
                     
                     if (btn === button) {
                         icon.classList.add('text-red-600');
                         icon.classList.remove('text-gray-400');
                         text.classList.add('text-red-600');
                         text.classList.remove('text-gray-600');
                         indicator.classList.add('scale-x-100');
                         indicator.classList.remove('scale-x-0');
                     } else {
                         icon.classList.remove('text-red-600');
                         icon.classList.add('text-gray-400');
                         text.classList.remove('text-red-600');
                         text.classList.add('text-gray-600');
                         indicator.classList.remove('scale-x-100');
                         indicator.classList.add('scale-x-0');
                     }
                 });
 
                 // Show active tab content
                 tabContents.forEach(content => {
                     if (content.id === `${tabId}-tab`) {
                         content.classList.remove('hidden');
                     } else {
                         content.classList.add('hidden');
                     }
                 });
 
                 // Center active tab on mobile
                 if (window.innerWidth < 768) {
                     button.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
                 }
             });
         });
     });
 </script>
 
 <style>
     .scrollbar-hide {
         -ms-overflow-style: none;
         scrollbar-width: none;
     }
     .scrollbar-hide::-webkit-scrollbar {
         display: none;
     }
 </style>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Mobile Fixed CTAs -->
<div class="lg:hidden fixed bottom-0 inset-x-0 bg-white border-t border-gray-100 z-50">
    <div class="flex items-center p-4 gap-3">
        <button onclick="copyProfileLink()" 
                class="flex-none p-3 rounded-xl border border-gray-200 text-gray-700 hover:bg-gray-50">
            <i class="fas fa-share-alt"></i>
        </button>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
    if (reviews.includes(profileId)) {
        // alert("Vous avez déjà laissé un avis pour ce profil.");
        document.getElementById('reviewBtn').classList.add('hidden');
        
    }
});    
        </script>

        <!-- Review Modal -->
<div id="reviewModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
    <div class="bg-white rounded-lg w-full max-w-md mx-4 overflow-hidden">
        <!-- Modal Header -->
        <div class="p-4 border-b border-gray-200">
            <h3 class="text-lg font-semibold text-gray-900">Écrire un avis</h3>
        </div>

        <!-- Modal Body -->
        <div class="p-4">
            <form id="reviewForm" class="space-y-4">
                <!-- Rating Stars -->
                <div class="flex items-center justify-center space-x-2">
                    <div class="rating-stars">
                        <% for(let i = 1; i <= 5; i++) { %>
                            <i class="fas fa-star text-2xl cursor-pointer text-gray-300 hover:text-yellow-400 transition-colors"
                               data-rating="<%= i %>"
                               onclick="setRating(<%= i %>)"></i>
                        <% } %>
                    </div>
                </div>

                <!-- Comment -->
                <div>
                    <label for="comment" class="block text-sm font-medium text-gray-700 mb-1">
                        Votre commentaire
                    </label>
                    <textarea id="comment" 
                              name="comment" 
                              rows="4" 
                              class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-1 focus:ring-red-500 focus:border-red-500"
                              placeholder="Partagez votre expérience..."></textarea>
                </div>

                <!-- Error Message -->
                <div id="errorMessage" class="hidden text-red-500 text-sm"></div>
            </form>
        </div>

        <!-- Modal Footer -->
        <div class="p-4 border-t border-gray-200 flex justify-end space-x-3">
            <button onclick="closeReviewModal()" 
                    class="px-4 py-2 text-sm text-gray-600 hover:text-gray-800">
                Annuler
            </button>
            <button onclick="submitReview('<%=profile._id%>')" 
                    id="submitReviewBtn"
                    class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed">
                <span>Envoyer</span>
                <span class="hidden">
                    <i class="fas fa-spinner fa-spin"></i>
                </span>
            </button>
        </div>
    </div>
</div>

<script>

// Local storage keys
const REVIEWS_KEY = 'user_reviews';
const MAX_REVIEWS = 2;
let currentRating = 0;

// Check if user can submit review and show modal
function checkAndShowReviewModal(profileId) {
    const reviews = JSON.parse(localStorage.getItem(REVIEWS_KEY) || '[]');
    
    // Check if user has already reviewed this profile
    if (reviews.includes(profileId)) {
        // alert("Vous avez déjà laissé un avis pour ce profil.");
        document.getElementById('reviewBtn').classList.add('hidden');

        return;
    }
    
    // Check if user has reached max reviews
    if (reviews.length >= MAX_REVIEWS) {
        showError("Vous avez atteint le nombre maximum d'avis autorisés.");
        return;
    }
    
    document.getElementById('reviewModal').classList.remove('hidden');
}

// Set rating
function setRating(rating) {
    currentRating = rating;
    const stars = document.querySelectorAll('.rating-stars .fa-star');
    stars.forEach((star, index) => {
        star.classList.toggle('text-yellow-400', index < rating);
        star.classList.toggle('text-gray-300', index >= rating);
    });
}

// Submit review
async function submitReview(profileId) {
    const submitBtn = document.getElementById('submitReviewBtn');
    const comment = document.getElementById('comment').value.trim();
    
    // Validate input
    if (currentRating === 0) {
        showError("Veuillez sélectionner une note.");
        return;
    }
    
    if (comment.length < 10) {
        showError("Votre commentaire doit contenir au moins 10 caractères.");
        return;
    }
    
    // Show loading state
    submitBtn.disabled = true;
    submitBtn.querySelector('span:first-child').classList.add('hidden');
    submitBtn.querySelector('span:last-child').classList.remove('hidden');
    
    try {
        const response = await fetch('/dashboard/api/reviews', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                profileId,
                rating: currentRating,
                comment
            })
        });
        
        if (!response.ok) throw new Error('Erreur lors de l\'envoi de l\'avis');
        
        // Update local storage
        const reviews = JSON.parse(localStorage.getItem(REVIEWS_KEY) || '[]');
        reviews.push(profileId);
        localStorage.setItem(REVIEWS_KEY, JSON.stringify(reviews));
        
        // Close modal and show success
        closeReviewModal();
        showSuccess("Votre avis a été envoyé avec succès!");
        
    } catch (error) {
        showError("Une erreur est survenue. Veuillez réessayer.");
    } finally {
        // Reset loading state
        submitBtn.disabled = false;
        submitBtn.querySelector('span:first-child').classList.remove('hidden');
        submitBtn.querySelector('span:last-child').classList.add('hidden');
    }
}

// Close modal
function closeReviewModal() {
    document.getElementById('reviewModal').classList.add('hidden');
    resetForm();
}

// Reset form
function resetForm() {
    currentRating = 0;
    document.getElementById('comment').value = '';
    document.getElementById('errorMessage').classList.add('hidden');
    setRating(0);
}

// Show error message
function showError(message) {
    const errorDiv = document.getElementById('errorMessage');
    errorDiv.textContent = message;
    errorDiv.classList.remove('hidden');
}

// Success toast notification
function showSuccess(message) {
    // You can implement your preferred toast notification here
    alert(message); // Simple alert for now
}

// Close modal when clicking outside
document.getElementById('reviewModal').addEventListener('click', (e) => {
    if (e.target === e.currentTarget) {
        closeReviewModal();
    }
});
</script>
        
        <% if (profile.phoneNumber) { %>
            <button onclick="openCallModal()" 
                    class="flex-1 flex items-center justify-center gap-2 py-3 
                           bg-gradient-to-r from-red-600 to-red-700 text-white rounded-xl 
                           hover:from-red-700 hover:to-red-800 transition-all duration-200">
                <i class="fas fa-comments"></i>
                <span>Contacter</span>
            </button>
        <% } %>
    </div>
</div>

<!-- Call Modal -->
<div id="callModal" class="fixed inset-0 z-50 hidden">
    <!-- Backdrop -->
    <div class="absolute inset-0 bg-black/60 backdrop-blur-sm" onclick="closeCallModal()"></div>

    <!-- Modal Content -->
    <div class="fixed inset-0 flex items-center justify-center p-4">
        <div id="modalContent" 
             class="bg-white w-full max-w-md rounded-2xl shadow-2xl transform scale-95
                    transition-all duration-300">
            <!-- Modal Body -->
            <div class="p-6">
                <!-- Icon -->
                <div class="w-16 h-16 mx-auto mb-6 rounded-full bg-red-100 flex items-center justify-center">
                    <i class="fas fa-comments text-2xl text-red-600"></i>
                </div>

                <!-- Content -->
                <div class="text-center mb-8">
                    <h2 class="text-xl font-bold text-gray-900 mb-2">Contacter le dresseur</h2>
                    <p class="text-lg text-gray-600"><%= profile.phoneNumber %></p>
                </div>

                <!-- Contact Options -->
                <div class="space-y-3">
                    <!-- WhatsApp Button -->
                    <a href="https://wa.me/<%= profile.phoneNumber %>" 
                       target="_blank"
                       class="flex items-center justify-center gap-3 w-full px-6 py-3.5 
                              bg-green-500 hover:bg-green-600 text-white rounded-xl 
                              transition-colors duration-200 font-medium">
                        <i class="fab fa-whatsapp text-xl"></i>
                        <span>Contacter sur WhatsApp</span>
                    </a>

                    <!-- Phone Call Button -->
                    <a href="tel:<%= profile.phoneNumber %>" 
                       class="flex items-center justify-center gap-3 w-full px-6 py-3.5 
                              bg-red-600 hover:bg-red-700 text-white rounded-xl 
                              transition-colors duration-200 font-medium">
                        <i class="fas fa-phone-alt"></i>
                        <span>Appeler directement</span>
                    </a>

                    <!-- Cancel Button -->
                    <button onclick="closeCallModal()" 
                            class="flex items-center justify-center gap-2 w-full px-6 py-3.5 
                                   bg-gray-100 hover:bg-gray-200 text-gray-700 rounded-xl 
                                   transition-colors duration-200 font-medium">
                        <span>Annuler</span>
                    </button>
                </div>
            </div>

            <!-- Close Button -->
            <button onclick="closeCallModal()" 
                    class="absolute -top-4 -right-4 w-8 h-8 bg-white rounded-full shadow-lg 
                           flex items-center justify-center hover:bg-gray-50 
                           transition-colors duration-200">
                <i class="fas fa-times text-gray-500"></i>
            </button>
        </div>
    </div>
</div>

<!-- Toast Notification for Copy Link -->
<div id="copyToast" 
     class="fixed bottom-24 left-1/2 -translate-x-1/2 transform scale-90 opacity-0 
            transition-all duration-300 bg-gray-900 text-white px-4 py-2 rounded-full 
            text-sm shadow-lg pointer-events-none">
    Lien copié !
</div>

<!-- Vanilla JavaScript for Functionality -->
<script>
    // Tab Functionality
    document.addEventListener('DOMContentLoaded', function() {
        // Get all tab buttons and content
        const tabButtons = document.querySelectorAll('.tab-button');
        const tabContents = document.querySelectorAll('.tab-content');
        
        // Handle deep linking on page load
        const hash = window.location.hash.substring(1);
        if (hash && ['about', 'reviews', 'media'].includes(hash)) {
            showTab(hash);
        }

        // Add click handlers to tab buttons
        tabButtons.forEach(button => {
            button.addEventListener('click', () => {
                const tabId = button.getAttribute('data-tab');
                showTab(tabId);
                // Update URL hash without scrolling
                history.pushState(null, null, `#${tabId}`);
            });
        });

        function showTab(tabId) {
            // Update tab buttons
            tabButtons.forEach(btn => {
                const isActive = btn.getAttribute('data-tab') === tabId;
                btn.classList.toggle('text-red-600', isActive);
                btn.classList.toggle('border-b-2', isActive);
                btn.classList.toggle('border-red-600', isActive);
            });

            // Update tab content
            tabContents.forEach(content => {
                if (content.id === `${tabId}-tab`) {
                    content.classList.remove('hidden');
                } else {
                    content.classList.add('hidden');
                }
            });
        }
    });

    // Call Modal Functions
    function openCallModal() {
        const modal = document.getElementById('callModal');
        const modalContent = document.getElementById('modalContent');
        
        modal.classList.remove('hidden');
        setTimeout(() => {
            modalContent.classList.remove('scale-95', 'opacity-0');
            modalContent.classList.add('scale-100', 'opacity-100');
        }, 50);
        
        document.body.style.overflow = 'hidden';
    }

    function closeCallModal() {
        const modal = document.getElementById('callModal');
        const modalContent = document.getElementById('modalContent');
        
        modalContent.classList.remove('scale-100', 'opacity-100');
        modalContent.classList.add('scale-95', 'opacity-0');
        
        setTimeout(() => {
            modal.classList.add('hidden');
            document.body.style.overflow = '';
        }, 200);
    }

    // Copy Profile Link Function
    function copyProfileLink() {
        const profileUrl = window.location.href.split('#')[0]; // Remove hash if present
        navigator.clipboard.writeText(profileUrl).then(() => {
            const toast = document.getElementById('copyToast');
            
            // Show toast
            toast.classList.remove('scale-90', 'opacity-0');
            toast.classList.add('scale-100', 'opacity-100');
            
            // Hide toast after 2 seconds
            setTimeout(() => {
                toast.classList.remove('scale-100', 'opacity-100');
                toast.classList.add('scale-90', 'opacity-0');
            }, 2000);
        });
    }

    // Keyboard Events
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && !document.getElementById('callModal').classList.contains('hidden')) {
            closeCallModal();
        }
    });

    // Handle clicks outside modal
    document.addEventListener('click', (e) => {
        const modal = document.getElementById('callModal');
        const modalContent = document.getElementById('modalContent');
        
        if (!modal.classList.contains('hidden') && 
            !modalContent.contains(e.target) && 
            !e.target.closest('button[onclick="openCallModal()"]')) {
            closeCallModal();
        }
    });
</script>

<!-- Styles -->
<style>
    /* Smooth scrolling */
    html {
        scroll-behavior: smooth;
    }

    /* Hide scrollbar for Chrome, Safari and Opera */
    .scrollbar-hide::-webkit-scrollbar {
        display: none;
    }

    /* Hide scrollbar for IE, Edge and Firefox */
    .scrollbar-hide {
        -ms-overflow-style: none;  /* IE and Edge */
        scrollbar-width: none;  /* Firefox */
    }

    /* Ensure modal animations are smooth */
    #modalContent {
        will-change: transform, opacity;
    }

    /* Toast animation */
    #copyToast {
        will-change: transform, opacity;
    }
</style>

<%- include('include/footer') %>