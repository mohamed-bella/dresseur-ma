<%- include('./head.ejs')  %>

<body class="bg-gray-50">
    <div class="min-h-screen">
        <!-- Header Section -->
       
        <%- include('./navbar.ejs')  %>
        <!-- Main Content -->
<main class="max-w-7xl mx-auto px-4 py-6 sm:px-6">
    <!-- Stats Overview Cards -->
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4">
        <!-- Total Visits -->
        <div class="p-4 bg-white border border-gray-100">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-600">Visites Totales</p>
                    <h3 class="text-2xl font-bold mt-1" id="totalVisits">
                        <%= stats.overview.totalVisits.toLocaleString() %>
                    </h3>
                    <p class="text-xs text-gray-500 mt-2">
                        <% if (stats.overview.growth > 0) { %>
                            <span class="text-green-600">↑ <%= stats.overview.growth %>%</span>
                        <% } else { %>
                            <span class="text-red-600">↓ <%= Math.abs(stats.overview.growth) %>%</span>
                        <% } %>
                        vs précédent
                    </p>
                </div>
                <i class="ri-group-line text-xl text-gray-400"></i>
            </div>
        </div>

        <!-- Unique Visitors -->
        <div class="p-4 bg-white border border-gray-100">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-600">Visiteurs Uniques</p>
                    <h3 class="text-2xl font-bold mt-1" id="uniqueVisitors">
                        <%= stats.overview.uniqueVisitors.toLocaleString() %>
                    </h3>
                    <div class="text-xs text-green-600 mt-2">
                        <i class="ri-arrow-up-line"></i>
                        vs précédent
                    </div>
                </div>
                <i class="ri-user-line text-xl text-gray-400"></i>
            </div>
        </div>

        <!-- Average Duration -->
        <div class="p-4 bg-white border border-gray-100">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-600">Durée Moyenne</p>
                    <h3 class="text-2xl font-bold mt-1" id="avgDuration">
                        <%= stats.engagement.averageSessionDuration %>s
                    </h3>
                    <div class="text-xs text-gray-500 mt-2">
                        vs précédent
                    </div>
                </div>
                <i class="ri-time-line text-xl text-gray-400"></i>
            </div>
        </div>

        <!-- Bounce Rate -->
        <div class="p-4 bg-white border border-gray-100">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-sm text-gray-600">Taux de Rebond</p>
                    <h3 class="text-2xl font-bold mt-1" id="bounceRate">
                        <%= stats.engagement.bounceRate %>%
                    </h3>
                    <div class="text-xs text-gray-500 mt-2">
                        vs précédent
                    </div>
                </div>
                <i class="ri-door-line text-xl text-gray-400"></i>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 mt-6">
        <!-- Daily Visits Chart -->
        <div class="p-4 bg-white border border-gray-100">
            <h3 class="text-lg font-medium text-gray-900">Visites Quotidiennes</h3>
            <div id="dailyVisitsChart" class="h-64 mt-4"></div>
        </div>

        <!-- Device Distribution -->
        <div class="p-4 bg-white border border-gray-100">
            <h3 class="text-lg font-medium text-gray-900">Appareils</h3>
            <div id="deviceChart" class="h-64 mt-4"></div>
        </div>
    </div>

    <!-- Browser Stats -->
    <div class="mt-6">
        <div class="p-4 bg-white border border-gray-100">
            <h3 class="text-lg font-medium text-gray-900 mb-4">Navigateurs</h3>
            <div class="space-y-3">
                <% stats.technology.browsers.forEach(browser => { %>
                    <div>
                        <div class="flex justify-between text-sm mb-1">
                            <span class="text-gray-600"><%= browser.name %></span>
                            <span class="text-gray-500"><%= browser.count %> utilisateurs</span>
                        </div>
                        <div class="h-1.5 bg-gray-100">
                            <div class="h-full bg-black" style="width: <%= (browser.count / stats.overview.totalVisits * 100) %>%"></div>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="mt-6 p-4 bg-white border border-gray-100">
        <h3 class="text-lg font-medium text-gray-900 mb-4">Activité Récente</h3>
        <div class="overflow-x-auto">
            <table class="w-full text-sm">
                <thead>
                    <tr class="border-b">
                        <th class="text-left py-2 text-gray-600 font-medium">Heure</th>
                        <th class="text-left py-2 text-gray-600 font-medium">Appareil</th>
                        <th class="text-left py-2 text-gray-600 font-medium">Localisation</th>
                        <th class="text-left py-2 text-gray-600 font-medium">Source</th>
                    </tr>
                </thead>
                <tbody>
                    <% stats.traffic.recent.forEach(visit => { %>
                        <tr class="border-b border-gray-50">
                            <td class="py-3 text-gray-600">
                                <%= new Date(visit.date).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' }) %>
                            </td>
                            <td class="py-3">
                                <span class="text-gray-600"><%= visit.device %></span>
                            </td>
                            <td class="py-3 text-gray-600"><%= visit.country %></td>
                            <td class="py-3">
                                <span class="inline-block px-2 py-1 text-xs bg-gray-100 text-gray-600">
                                    <%= visit.referrer %>
                                </span>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>
</main>
    </div>
    <div id="chartData" style="display: none;">
        <div data-daily-visits-data='<%- JSON.stringify(stats.dailyVisits.map(d => d.visits)) %>'></div>
        <div data-daily-visits-categories='<%- JSON.stringify(stats.dailyVisits.map(d => d.date)) %>'></div>
        <div data-device-desktop='<%= stats.overview.devices.desktop %>'></div>
        <div data-device-mobile='<%= stats.overview.devices.mobile %>'></div>
        <div data-device-tablet='<%= stats.overview.devices.tablet %>'></div>
    </div>
    <script>
        // Get the hidden data container
        const chartDataElement = document.getElementById('chartData');
    
        // Extract the data from the data attributes and parse JSON
        const dailyVisitsData = JSON.parse(chartDataElement.querySelector('[data-daily-visits-data]').dataset.dailyVisitsData);
        const dailyVisitsCategories = JSON.parse(chartDataElement.querySelector('[data-daily-visits-categories]').dataset.dailyVisitsCategories);
        const deviceDesktop = parseInt(chartDataElement.querySelector('[data-device-desktop]').dataset.deviceDesktop);
        const deviceMobile = parseInt(chartDataElement.querySelector('[data-device-mobile]').dataset.deviceMobile);
        const deviceTablet = parseInt(chartDataElement.querySelector('[data-device-tablet]').dataset.deviceTablet);
    
        // Chart Configurations
        const chartOptions = {
            dailyVisits: {
                chart: {
                    type: 'area',
                    height: 300,
                    fontFamily: 'Plus Jakarta Sans, sans-serif',
                    toolbar: { show: false },
                    animations: {
                        enabled: true,
                        easing: 'easeinout',
                        speed: 800
                    }
                },
                series: [{
                    name: 'Visits',
                    data: dailyVisitsData
                }],
                stroke: {
                    curve: 'smooth',
                    width: 2
                },
                fill: {
                    type: 'gradient',
                    gradient: {
                        shadeIntensity: 1,
                        opacityFrom: 0.45,
                        opacityTo: 0.05
                    }
                },
                colors: ['#f43f5e'],
                xaxis: {
                    categories: dailyVisitsCategories,
                    axisBorder: { show: false },
                    axisTicks: { show: false },
                    labels: {
                        style: { colors: '#94a3b8' }
                    }
                },
                yaxis: {
                    labels: {
                        style: { colors: '#94a3b8' }
                    }
                },
                grid: {
                    borderColor: '#f1f5f9',
                    strokeDashArray: 4,
                    xaxis: { lines: { show: true } }
                }
            },
            deviceDistribution: {
                chart: {
                    type: 'donut',
                    height: 300,
                    fontFamily: 'Plus Jakarta Sans, sans-serif'
                },
                series: [
                    deviceDesktop,
                    deviceMobile,
                    deviceTablet
                ],
                labels: ['Desktop', 'Mobile', 'Tablet'],
                colors: ['#f43f5e', '#3b82f6', '#eab308'],
                plotOptions: {
                    pie: {
                        donut: {
                            size: '75%'
                        }
                    }
                },
                legend: {
                    position: 'bottom',
                    fontFamily: 'Plus Jakarta Sans, sans-serif'
                }
            }
        };
    
        // Initialize Charts
        document.addEventListener('DOMContentLoaded', function() {
            new ApexCharts(document.querySelector("#dailyVisitsChart"),
                chartOptions.dailyVisits).render();
    
            new ApexCharts(document.querySelector("#deviceChart"),
                chartOptions.deviceDistribution).render();
        });
    
        // Event Listeners
        document.getElementById('refreshBtn').addEventListener('click', function() {
            this.classList.add('animate-spin');
            setTimeout(() => this.classList.remove('animate-spin'), 1000);
        });
    
        document.getElementById('exportBtn').addEventListener('click', function() {
            // Add export functionality
        });
    </script>   
</body>
</html>